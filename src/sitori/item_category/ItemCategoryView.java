package sitori.item_category;


import java.util.ArrayList;
import javax.swing.JOptionPane;
/**
 *
 * @author lucky
 * @author gema
 */
public class ItemCategoryView extends javax.swing.JPanel {
    private int categoryId = -1; 
    private final ItemCategoryService itemCategoryService;
    private ItemCategoryTableModel itemCategoryTableModel;
    private ArrayList<ItemCategory> listItemCategory;
    /**
     * Creates new form ItemCategoryView
     */
    public ItemCategoryView() {
        
        initComponents();
        this.setSize(800, 650);
        reset.setVisible(false);
        delete.setVisible(false);
        
        itemCategoryService = new ItemCategoryService();
    }
    
    public void initData() {
        getItemCategory();
    }
    
    private void getItemCategory() {
        listItemCategory = itemCategoryService.getAll();
        itemCategoryTableModel = new ItemCategoryTableModel(listItemCategory);
        CategoryTable.setModel(itemCategoryTableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        categoryNameField = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CategoryTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(240, 240, 240));
        setMinimumSize(new java.awt.Dimension(800, 650));
        setPreferredSize(new java.awt.Dimension(800, 650));

        categoryNameField.setFont(new java.awt.Font("Noto Sans", 0, 17)); // NOI18N
        categoryNameField.setForeground(new java.awt.Color(51, 51, 51));
        categoryNameField.setToolTipText("");
        categoryNameField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(42, 110, 244), 3, true));

        save.setBackground(new java.awt.Color(255, 255, 255));
        save.setFont(new java.awt.Font("Noto Sans", 0, 17)); // NOI18N
        save.setForeground(new java.awt.Color(42, 110, 244));
        save.setText("Save");
        save.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(42, 110, 244), 3, true));
        save.setMaximumSize(new java.awt.Dimension(45, 30));
        save.setMinimumSize(new java.awt.Dimension(45, 30));
        save.setPreferredSize(new java.awt.Dimension(45, 30));
        save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveMouseClicked(evt);
            }
        });
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        reset.setBackground(new java.awt.Color(255, 255, 255));
        reset.setFont(new java.awt.Font("Noto Sans", 0, 17)); // NOI18N
        reset.setForeground(new java.awt.Color(153, 153, 153));
        reset.setText("Reset");
        reset.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(108, 117, 125), 3, true));
        reset.setMaximumSize(new java.awt.Dimension(45, 30));
        reset.setMinimumSize(new java.awt.Dimension(45, 30));
        reset.setPreferredSize(new java.awt.Dimension(45, 30));
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 255, 255));
        delete.setFont(new java.awt.Font("Noto Sans", 0, 17)); // NOI18N
        delete.setForeground(new java.awt.Color(220, 53, 69));
        delete.setText("Delete");
        delete.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(220, 53, 69), 3, true));
        delete.setMaximumSize(new java.awt.Dimension(45, 30));
        delete.setMinimumSize(new java.awt.Dimension(45, 30));
        delete.setPreferredSize(new java.awt.Dimension(45, 30));
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
        });

        CategoryTable.setAutoCreateRowSorter(true);
        CategoryTable.setBackground(new java.awt.Color(240, 240, 240));
        CategoryTable.setFont(new java.awt.Font("Noto Sans", 0, 17)); // NOI18N
        CategoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Kategori Barang"
            }
        ));
        CategoryTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CategoryTable.setGridColor(new java.awt.Color(204, 204, 204));
        CategoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CategoryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(CategoryTable);

        jLabel1.setFont(new java.awt.Font("Noto Sans", 0, 17)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(42, 110, 244));
        jLabel1.setText("Kategori Barang");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 719, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categoryNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {delete, reset, save});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(categoryNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void insertCategory(ItemCategory category) {
        itemCategoryService.insert(category);
        getItemCategory();
    }
    
    private void updateCategory(int id, ItemCategory category) {
        itemCategoryService.update(id, category);
        clearForm();
        getItemCategory();
        categoryId = -1;
    }

    private void deleteCategory(int id) {
        itemCategoryService.delete(id);
        clearForm();
        getItemCategory();
        categoryId = -1;
    }
    
    private void clearForm() {
        categoryNameField.setText("");
        CategoryTable.clearSelection();
        reset.setVisible(false);
        delete.setVisible(false);
    }
    
    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        clearForm();
        categoryId = -1;
    }//GEN-LAST:event_resetActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        
    }//GEN-LAST:event_saveActionPerformed

    private void CategoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CategoryTableMouseClicked
        int index = CategoryTable.getSelectedRow();
        ItemCategory category = listItemCategory.get(index);
        categoryId = category.getId();
        categoryNameField.setText(category.getItemCategoryName());
        
        reset.setVisible(true);
        delete.setVisible(true);
    }//GEN-LAST:event_CategoryTableMouseClicked

    private void saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveMouseClicked
        String categoryName = categoryNameField.getText();
        
        if (categoryName.equals("")) {
            JOptionPane.showMessageDialog(
                this, 
                "All field are required", 
                "Error", 
                JOptionPane.ERROR_MESSAGE
            );
        } else {
            if (categoryId == -1) {
                insertCategory(new ItemCategory(0,categoryName, ""));
            } else {
                updateCategory(categoryId, new ItemCategory(0, categoryName, ""));
            }

            categoryNameField.setText("");
        }
    }//GEN-LAST:event_saveMouseClicked

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        deleteCategory(categoryId);
    }//GEN-LAST:event_deleteMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        System.out.println("Hello world");
    }//GEN-LAST:event_jButton1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CategoryTable;
    private javax.swing.JTextField categoryNameField;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton reset;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
